name: CD

on:
  release:
    types:
      - published

jobs:
  merge-dev-to-main:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Configure Git User
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Fetch Dev and Main Branches
      run: |
        git fetch origin dev
        git fetch origin main

    - name: Checkout Main Branch
      run: |
        git checkout -b main origin/main

    - name: Merge Dev into Main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        RELEASE_TITLE="${{ github.event.release.name }}"
        if [ -z "$RELEASE_TITLE" ]; then
          RELEASE_TITLE="Release ${{ github.event.release.tag_name }}"
        fi

        # 最新のリモート変更を取得
        git fetch origin main
        git checkout main
        git reset --hard origin/main        

        # リモートの変更をローカルにマージ
        git merge origin/main || true

        # dev を main にマージ（コンフリクト発生時は自動解決）
        git merge origin/dev --allow-unrelated-histories -m "Merge dev into main - $RELEASE_TITLE" || true

        # コンフリクト解消: dev の変更を優先
        if git diff --name-only --diff-filter=U | grep -q '^'; then
          echo "Conflicts detected. Resolving by prioritizing 'dev'."
          git merge --abort
          git reset --hard origin/dev
          git add .
          git commit -m "Resolve conflicts by prioritizing dev branch - $RELEASE_TITLE"
        fi
        
        # 強制的にプッシュ（非推奨の場合は要確認）
        git push origin main --force-with-lease
